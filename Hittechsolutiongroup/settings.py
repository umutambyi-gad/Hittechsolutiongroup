"""
Django settings for Hittechsolutiongroup project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import cloudinary
import django_heroku
from decouple import config, Csv
import dj_database_url


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

config('ALLOWED_HOSTS', default='127.0.0.1', cast=Csv())

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'cloudinary',
    'Homepage',
    'Aboutpage',
    'Servicespage',
    'Memberspage',
    'Blogpage',
    'Contactpage',
    'admin_reorder',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'admin_reorder.middleware.ModelAdminReorder',
]

ROOT_URLCONF = 'Hittechsolutiongroup.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            os.path.join(BASE_DIR, 'Homepage/templates'),
            os.path.join(BASE_DIR, 'Aboutpage/templates'),
            os.path.join(BASE_DIR, 'Servicespage/templates'),
            os.path.join(BASE_DIR, 'Memberspage/templates'),
            os.path.join(BASE_DIR, 'Blogpage/templates'),
            os.path.join(BASE_DIR, 'Contactpage/templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Hittechsolutiongroup.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
    }
}

if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': config('DB_HOST'),
            'NAME': config('DB_NAME'),
            'USER': config('DB_USER'),
            'PASSWORD': config('DB_PASSWORD'),
        }
    }    

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Kigali'

USE_I18N = True

USE_L10N = True

USE_TZ = True

EMAIL_HOST = config('EMAIL_HOST', default='localhost')
EMAIL_PORT = config('EMAIL_PORT', cast=int, default=1025)
EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')
EMAIL_USE_TLS = config('EMAIL_USE_TLS', default=False, cast=bool)
DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL', default='')

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

STATIC_ROOT = os.path.join(BASE_DIR, "assets")

MEDIA_URL = "/media/"

MEDIA_ROOT = os.path.join(BASE_DIR, "media")

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

cloudinary.config(
    cloud_name = config('cloud_name'),
    api_key = config('api_key'),
    api_secret = config('api_secret')
)

ADMIN_REORDER = (
    {
        'app': 'auth',
        'models': (
            'auth.User',
            'auth.Group',
        )
    },
    {
        'app': 'Homepage',
        'models': (
            'Homepage.HomeBackground',
            'Homepage.HomeDisplayServices',
            'Homepage.WhatWeOfferSection',
            'Homepage.WhatWeOffer',
            'Homepage.TestimonialSection',
            'Homepage.TestimonyAddingSection',
            'Homepage.TestimonyAuthor',
            'Homepage.FooterGallery',
        )
    },
    {
        'app': 'Aboutpage',
        'models': (
            'Aboutpage.AboutBreadcrumb',
            'Aboutpage.HitTechSolutionGroupHistory',
            'Aboutpage.StatisticSection',
            'Aboutpage.Statistics',
        )
    },
    {
        'app': 'Servicespage',
        'models': (
            'Servicespage.ServicesBreadcrumb',
            'Servicespage.ServicesSection',
            'Servicespage.Services',
            'Servicespage.KeyFeatureSection',
            'Servicespage.KeyFeatures',
        )
    },
    {
        'app': 'Memberspage',
        'models': (
            'Memberspage.MemberBreadcrumb',
            'Memberspage.StaffMembersSection',
            'Memberspage.Members',
            'Memberspage.SocialMediaForStaffUsers',
        )
    },
    {
        'app': 'Blogpage',
        'models': (
            'Blogpage.BlogBreadcrumb',
            'Blogpage.Blogs',
            'Blogpage.Categories',
            'Blogpage.Tags',
            'Blogpage.RootComments',
            'Blogpage.ReplyComments',
        )
    },
    {
        'app': 'Contactpage',
        'models': (
            'Contactpage.ContactBreadcrumb',
            'Contactpage.ContactForm',
        )
    },
)

DATABASES['default'] = dj_database_url.config()
django_heroku.settings(locals())
